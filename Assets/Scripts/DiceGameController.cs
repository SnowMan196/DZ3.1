using UnityEngine;
using UnityEngine.InputSystem; // –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –¥–ª—è InputAction

public class DiceGameController : MonoBehaviour
{
    [Header("References")]
    [SerializeField] private DiceUIManager uiManager;
    [SerializeField] private DiceManager diceManager;

    private int totalResult;

    private void OnEnable()
    {
        uiManager.OnDiceCountChanged.AddListener(diceManager.UpdateDiceCount);
        uiManager.OnRollPressed.AddListener(RollDice);
        FaceSensor.OnFaceDetected += AddScore;
    }

    private void OnDisable()
    {
        uiManager.OnDiceCountChanged.RemoveListener(diceManager.UpdateDiceCount);
        uiManager.OnRollPressed.RemoveListener(RollDice);
        FaceSensor.OnFaceDetected -= AddScore;
    }

    // üîπ –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω—É–∂–µ–Ω –¥–ª—è PlayerInput (–≤—ã–∑–æ–≤ —á–µ—Ä–µ–∑ Input System)
    public void OnRoll(InputAction.CallbackContext ctx)
    {
        // –í—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –º–æ–º–µ–Ω—Ç –Ω–∞–∂–∞—Ç–∏—è
        if (!ctx.performed) return;

        RollDice();
    }

    // üîπ –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–æ–≤
    public void RollDice()
    {
        totalResult = 0;
        diceManager.RollAllDice();
        Debug.Log("üé≤ –ö—É–±–∏–∫–∏ –±—Ä–æ—à–µ–Ω—ã!");
    }

    // üîπ –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∫–∏, –∫–æ–≥–¥–∞ FaceSensor —Å–æ–æ–±—â–∞–µ—Ç –≤–µ—Ä—Ö–Ω—é—é –≥—Ä–∞–Ω—å
    private void AddScore(int value)
    {
        totalResult += value;
        uiManager.ShowResult(totalResult);
    }
}